doctype html
html(lang="ru")
  include includes/head.pug
  style.
    a.active{
    pointer-events: none;
    }
  body
    -
      const getRandomInt = (max) => Math.ceil(Math.random()*max);
    mixin categoryImage(category)
      -
        const idPadded = `0${getRandomInt(6)}`;
      img(src=`/img/cat${idPadded}.jpg` srcset=`/img/cat${idPadded}@2x.jpg 2x` alt=category.name)

    mixin pagination(page, totalPages, width, prefix)
      -
        // вычислим начальную и конечную страницу диапазона без учёта ограничений
        let start = page - width;
        let end = page + width;

        // передвинем диапазон вправо, если он начинается с номера меньше единицы
        if(start < 1){
          end += 1 - start;
          start = 1;
        }
        // передвинем диапазон влево, если он заканчивается номером больше количества страниц
        if(end > totalPages){
          start -= end - totalPages;
          end = totalPages;
        }

        // если мы оказались в этой ветке, значит, всего страниц слишком мало. делаем начало диапазона 1
        if(start < 1){
          start = 1;
        }
        let i = start - 1

      .preview__toggle-wrapper
        ul.preview__pagination.pagination
          if start > 1
            li
              a.pagination__button.button.button--backwards.button--disabled(href=`${prefix}page=${page - 1}` aria-label="Страница назад") Назад
          while i++ < end
            li.pagination__item.pagination__item--active
              a(class={active: i === page} href=`${prefix}page=${i}`)= i
          if end < totalPages
            li
              a.pagination__button.button.button--forward(href=`${prefix}page=${page + 1}`) Вперёд

    div.wrapper
      include includes/header.pug
      block content
      include includes/footer.pug
    script(src="/js/vendor.js")
    script(src="/js/main.js")
